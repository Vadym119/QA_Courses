{
	"info": {
		"_postman_id": "baf3d1eb-bbf3-4965-9ffb-b34d54efdb0f",
		"name": "HomeWork 2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5007/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"  let jsonData = pm.response.json();\r",
							"  let name = \"Vadym\"\r",
							"  let nameReq = jsonData.name\r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"      pm.expect(nameReq).to.eql(name);\r",
							"});\r",
							"\r",
							"  let age = \"33\"\r",
							"  let ageReq = jsonData.age\r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"      pm.expect(ageReq).to.eql(age);\r",
							"});\r",
							"\r",
							"  let salary = 5000\r",
							"\r",
							"  let salaryReq = jsonData.salary\r",
							"\r",
							"pm.test(\"Check salary\", function () {\r",
							"      pm.expect(salaryReq).to.eql(salary);\r",
							"});\r",
							"\r",
							"let req = request.data\r",
							"\r",
							"let name_req = req.name\r",
							"pm.test(\"Check name 2\", function () {\r",
							"      pm.expect(nameReq).to.eql(name_req);\r",
							"});\r",
							"\r",
							"let age_req = req.age\r",
							"pm.test(\"Check age 2\", function () {\r",
							"      pm.expect(ageReq).to.eql(age_req);\r",
							"});\r",
							"\r",
							"let salary_req = +req.salary\r",
							"pm.test(\"Check salary 2\", function () {\r",
							"      pm.expect(salaryReq).to.eql(salary_req);\r",
							"});\r",
							"\r",
							"console.log(jsonData.family)\r",
							"\r",
							"let salary_15 = jsonData.family.u_salary_1_5_year\r",
							"pm.test(\"Check salary 15\", function () {\r",
							"      pm.expect(salary_15).to.eql(salary_req * 4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Vadym",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "5000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5007/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let req_name = pm.request.url.query.get(\"name\")\r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"      pm.expect(jsonData.name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"let req_age = pm.request.url.query.get(\"age\")\r",
							"pm.test(\"Check age\", function () {\r",
							"      pm.expect(jsonData.age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"let req_salary = +pm.request.url.query.get(\"salary\")\r",
							"pm.test(\"Check salary\", function () {\r",
							"      pm.expect(jsonData.salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"console.log(jsonData.family)\r",
							"\r",
							"pm.test(\"Dog has name\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"pm.test(\"Dog has name\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"pm.test(\"Name is Luky\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.equal(\"Luky\");\r",
							"});\r",
							"pm.test(\"Age = 4\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.equal(4);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Vadym",
							"type": "text",
							"disabled": true
						},
						{
							"key": "age",
							"value": "33",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "5000",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5007/object_info_3?name=Vadym&age=33&salary=5000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Vadym"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "5000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let jsonData = pm.response.json();\r",
							"let reqData = pm.request.url.query.all()\r",
							"\r",
							"pm.test(\"Name check\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(reqData[0].value);\r",
							"});\r",
							"\r",
							"pm.test(\"Age check\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(+reqData[1].value);\r",
							"});\r",
							"\r",
							"console.log(reqData[2].value)\r",
							"console.log(jsonData.salary)\r",
							"console.log(jsonData.salary[0])\r",
							"console.log(jsonData.salary[1])\r",
							"console.log(jsonData.salary[2])\r",
							"\r",
							"pm.test(\"Salary0 check\", function () {\r",
							"    pm.expect(+jsonData.salary[0]).to.eql(+reqData[2].value);\r",
							"});\r",
							"pm.test(\"Salary1 check\", function () {\r",
							"    pm.expect(+jsonData.salary[1]).to.eql(reqData[2].value * 2);\r",
							"});\r",
							"pm.test(\"Salary2 check\", function () {\r",
							"    pm.expect(+jsonData.salary[2]).to.eql(reqData[2].value * 3);\r",
							"});\r",
							"let myName = reqData[0].value\r",
							"let myAge = reqData[1].value\r",
							"let mySalary = reqData[2].value\r",
							"pm.environment.set(\"Name\", myName);\r",
							"pm.environment.set(\"Age\", myAge);\r",
							"pm.environment.set(\"Salary\", mySalary);\r",
							"\r",
							"for(let i=0; i<3; i++) {\r",
							"    console.log(jsonData.salary[i])\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5007/object_info_4?name=Vadym&age=33&salary=5000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Vadym"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "5000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let req = request.data;\r",
							"\r",
							"pm.test(\"Json response to have start_qa_salary\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"Json response to have qa_salary_after_6_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Json response to have qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Json response to have qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"Json response to have qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"Json response to have person\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"let salary_request = +req.salary\r",
							"\r",
							"pm.test(\"Does start_qa_salary equals salary_request\", function () {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(salary_request);\r",
							"});\r",
							"\r",
							"pm.test(\"Does qa_salary_after_6_months equals salary_request * 2\", function () {\r",
							"      pm.expect(jsonData.qa_salary_after_6_months).to.eql(salary_request * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"Does qa_salary_after_12_months equal salary_request * 2.7\", function () {\r",
							"        pm.expect(jsonData.qa_salary_after_12_months).to.eql(salary_request * 2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"Does qa_salary_after_1.5_year equal salary_request * 3.3\", function () {\r",
							"       pm.expect(jsonData[\"qa_salary_after_1.5_year\"]).to.eql(salary_request * 3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"Does qa_salary_after_3.5_years equal salary_request * 3.8\", function () {\r",
							"       pm.expect(jsonData[\"qa_salary_after_3.5_years\"]).to.eql(salary_request * 3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"Check 1 element\", function () {\r",
							"       pm.expect(jsonData.person.u_name[1]).to.eql(salary_request);\r",
							"});\r",
							"\r",
							"pm.test(\"Does u_age equal age\", function () {\r",
							"       pm.expect(jsonData.person.u_age).to.eql(+req.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check 1 element\", function () {\r",
							"       pm.expect(jsonData.person.u_salary_5_years).to.eql(salary_request * 4.2);\r",
							"});\r",
							"\r",
							"let count = Object.keys(jsonData.person).length\r",
							"let keys = Object.keys(jsonData.person)\r",
							"for(i=0; i<count; i++){\r",
							"    \r",
							"    console.log(keys[i])\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{Name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{Age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{Salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5007/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}